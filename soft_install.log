+ '[' -f /root/install/docker-compose/../lib/functions-common.sh ']'
+ . /root/install/docker-compose/../lib/functions-common.sh
+ '[' -f /root/install/docker-compose/config.conf ']'
+ . /root/install/docker-compose/config.conf
+ os_detect
+ OSTYPE=unknown
+ '[' -f /etc/redhat-release ']'
+ '[' -f /etc/debian_version ']'
+ export OSTYPE=DEBIAN
+ OSTYPE=DEBIAN
+ os_version
+ case ${OSTYPE} in
++ which lsb_release
+ '[' -z /usr/bin/lsb_release ']'
+ '[' -x /usr/bin/lsb_release ']'
++ lsb_release -s -c
+ export OSVER=jammy
+ OSVER=jammy
++ lsb_release -s -i
+ '[' Ubuntu = Ubuntu ']'
+ export reponame=ubuntu
+ reponame=ubuntu
+ pre_install
+ get_ip
++ ip -4 -o addr show
++ grep -m1 -P -o '(?<=inet )\d+\.\d+\.\d+\.\d+'
++ grep -v -F 127.0.0.1
+ export IP=176.53.162.177
+ IP=176.53.162.177
+ wait_apt_daily_service
+ which systemctl
/usr/bin/systemctl
+ let sleep_count=300
++ systemctl list-units --all
++ grep -c dead
++ grep -E apt.+service
+ [[ 2 -lt 2 ]]
+ install
+ install_docker
+ systemctl --no-pager status docker.service
+ case ${OSTYPE} in
+ apt-get update
Hit:1 http://zabbix.repo.timeweb.ru/ubuntu focal InRelease
Hit:2 http://archive.ubuntu.com/ubuntu jammy InRelease
Get:3 http://security.ubuntu.com/ubuntu jammy-security InRelease [110 kB]
Get:4 http://archive.ubuntu.com/ubuntu jammy-updates InRelease [119 kB]
Get:5 http://archive.ubuntu.com/ubuntu jammy-backports InRelease [109 kB]
Get:6 http://security.ubuntu.com/ubuntu jammy-security/main amd64 Packages [765 kB]
Get:7 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 Packages [974 kB]
Get:8 http://archive.ubuntu.com/ubuntu jammy-updates/main Translation-en [223 kB]
Get:9 http://security.ubuntu.com/ubuntu jammy-security/main Translation-en [165 kB]
Get:10 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 c-n-f Metadata [15.6 kB]
Get:11 http://security.ubuntu.com/ubuntu jammy-security/main amd64 c-n-f Metadata [11.3 kB]
Get:12 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 Packages [981 kB]
Get:13 http://security.ubuntu.com/ubuntu jammy-security/universe amd64 Packages [781 kB]
Get:14 http://archive.ubuntu.com/ubuntu jammy-updates/universe Translation-en [214 kB]
Get:15 http://security.ubuntu.com/ubuntu jammy-security/universe Translation-en [143 kB]
Get:16 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 c-n-f Metadata [21.8 kB]
Get:17 http://security.ubuntu.com/ubuntu jammy-security/universe amd64 c-n-f Metadata [16.7 kB]
Fetched 4,648 kB in 2s (2,660 kB/s)
Reading package lists...
+ apt-get -y install curl jq
Reading package lists...
Building dependency tree...
Reading state information...
curl is already the newest version (7.81.0-1ubuntu1.13).
curl set to manually installed.
The following additional packages will be installed:
  libjq1 libonig5
The following NEW packages will be installed:
  jq libjq1 libonig5
0 upgraded, 3 newly installed, 0 to remove and 20 not upgraded.
Need to get 357 kB of archives.
After this operation, 1,087 kB of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu jammy/main amd64 libonig5 amd64 6.9.7.1-2build1 [172 kB]
Get:2 http://archive.ubuntu.com/ubuntu jammy/main amd64 libjq1 amd64 1.6-2.1ubuntu3 [133 kB]
Get:3 http://archive.ubuntu.com/ubuntu jammy/main amd64 jq amd64 1.6-2.1ubuntu3 [52.5 kB]
debconf: unable to initialize frontend: Dialog
debconf: (TERM is not set, so the dialog frontend is not usable.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
Fetched 357 kB in 1s (443 kB/s)
Selecting previously unselected package libonig5:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 74196 files and directories currently installed.)
Preparing to unpack .../libonig5_6.9.7.1-2build1_amd64.deb ...
Unpacking libonig5:amd64 (6.9.7.1-2build1) ...
Selecting previously unselected package libjq1:amd64.
Preparing to unpack .../libjq1_1.6-2.1ubuntu3_amd64.deb ...
Unpacking libjq1:amd64 (1.6-2.1ubuntu3) ...
Selecting previously unselected package jq.
Preparing to unpack .../jq_1.6-2.1ubuntu3_amd64.deb ...
Unpacking jq (1.6-2.1ubuntu3) ...
Setting up libonig5:amd64 (6.9.7.1-2build1) ...
Setting up libjq1:amd64 (1.6-2.1ubuntu3) ...
Setting up jq (1.6-2.1ubuntu3) ...
Processing triggers for man-db (2.10.2-1) ...
Processing triggers for libc-bin (2.35-0ubuntu3.1) ...

Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
+ umask 0022
+ curl -sS https://get.docker.com/
+ bash
# Executing docker install script, commit: e5543d473431b782227f8908005543bb4389b8de
+ sh -c 'apt-get update -qq >/dev/null'
+ sh -c 'DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null'
+ sh -c 'install -m 0755 -d /etc/apt/keyrings'
+ sh -c 'curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg'
+ sh -c 'chmod a+r /etc/apt/keyrings/docker.gpg'
+ sh -c 'echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu jammy stable" > /etc/apt/sources.list.d/docker.list'
+ sh -c 'apt-get update -qq >/dev/null'
+ sh -c 'DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-ce-rootless-extras docker-buildx-plugin >/dev/null'
+ sh -c 'docker version'
Client: Docker Engine - Community
 Version:           24.0.6
 API version:       1.43
 Go version:        go1.20.7
 Git commit:        ed223bc
 Built:             Mon Sep  4 12:31:44 2023
 OS/Arch:           linux/amd64
 Context:           default

Server: Docker Engine - Community
 Engine:
  Version:          24.0.6
  API version:      1.43 (minimum version 1.12)
  Go version:       go1.20.7
  Git commit:       1a79695
  Built:            Mon Sep  4 12:31:44 2023
  OS/Arch:          linux/amd64
  Experimental:     false
 containerd:
  Version:          1.6.22
  GitCommit:        8165feabfdfe38c65b599c4993d227328c231fca
 runc:
  Version:          1.1.8
  GitCommit:        v1.1.8-0-g82f18fe
 docker-init:
  Version:          0.19.0
  GitCommit:        de40ad0

================================================================================

To run Docker as a non-privileged user, consider setting up the
Docker daemon in rootless mode for your user:

    dockerd-rootless-setuptool.sh install

Visit https://docs.docker.com/go/rootless/ to learn about rootless mode.


To run the Docker daemon as a fully privileged service, but granting non-root
users access, refer to https://docs.docker.com/go/daemon-access/

WARNING: Access to the remote API on a privileged Docker daemon is equivalent
         to root access on the host. Refer to the 'Docker daemon attack surface'
         documentation for details: https://docs.docker.com/go/attack-surface/

================================================================================

+ umask 0077
+ case ${OSTYPE} in
+ install_docker_compose
+ DESTINATION=/usr/bin/docker-compose
+ '[' '!' -f /usr/bin/docker-compose ']'
++ curl -sS https://api.github.com/repos/docker/compose/releases/latest
++ jq .name -r
+ VERSION=v2.21.0
++ uname -s
++ uname -m
+ curl -sSL https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-Linux-x86_64 -o /usr/bin/docker-compose
+ chmod +x /usr/bin/docker-compose
+ post_install
+ remove_files
+ rm -rf /root/install
